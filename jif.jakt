import decoder { GIFDecoder }
import bitstream { BitStream }
import renderer { CLIRenderer }
import debug { DebugArgs }
import util { map, print_in_rows }

fn main(args: [String]) -> c_int {
    let debug_args = DebugArgs::from_args(args)
    mut file = File::open_for_reading(args[1])
    let bytes = file.read_all()

    mut decoder = GIFDecoder::init(bytes)

    let gif = decoder.decode()

    try {
        CLIRenderer::render(gif, debug_args)
    } catch e {
        if e.code() == 69 {
            // this is the code that we throw when we finish debug printing
            return 0
        }
        return e.code() as! c_int
    }
    return 0
}
